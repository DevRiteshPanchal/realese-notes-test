on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

name: release-please
              

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - name: release-please-action       
        uses: googleapis/release-please-action@v4.1.3
        with:
          # this assumes that you have created a personal access token
          # (PAT) and configured it as a GitHub action secret named
          # `MY_RELEASE_PLEASE_TOKEN` (this secret name is not important).
          token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
          # this is a built-in strategy in release-please, see "Action Inputs"
          # for more options
          # release-type: node
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json  

      - name: Install jq
        run: sudo apt-get install jq

      - name: Wait for PR creation
        id: wait-for-pr
        run: |
          MAX_ATTEMPTS=10
          SLEEP_INTERVAL=30
          COUNTER=0
          PR_URL=""

          while [ $COUNTER -lt $MAX_ATTEMPTS ]; do
            echo "Checking for release PR (Attempt $((COUNTER+1))/$MAX_ATTEMPTS)..."

            # Check for the pull request created by the current workflow
            PR_URL=$(curl -s -H "Authorization: token ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/pulls?state=open&head=${{ github.repository_owner }}:release-please%2Fbranches%2Fmain")

            echo "Response: $PR_URL"  # Print the API response for debugging

            if [[ "$PR_URL" != "[]" ]]; then
              echo "PR found!"
              PR_NUMBER=$(echo $PR_URL | jq -r '.[0].number')
              echo "Extracted PR_NUMBER: $PR_NUMBER"  # Print the PR number for debugging
              echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
              break
            fi

            echo "PR not found, waiting for $SLEEP_INTERVAL seconds..."
            COUNTER=$((COUNTER+1))
            sleep $SLEEP_INTERVAL
          done

          # If no PR was found after all attempts, fail the job
          if [[ "$PR_URL" == "[]" ]]; then
            echo "No PR found after $MAX_ATTEMPTS attempts, failing the job."
            exit 1
          fi      
